import com.dirzaaulia.gamewish.buildsrc.Libs

plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-parcelize'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id "com.google.protobuf" version "0.8.12"
    id 'com.google.gms.google-services'
}

android {
    signingConfigs {
        debug {
            storeFile file('D:\\Android Studio\\keystore.jks')
            storePassword 'stravinsky9'
            keyAlias 'keydirza'
            keyPassword 'stravinsky9'
        }
        release {
            storeFile file('D:\\Android Studio\\keystore.jks')
            storePassword 'stravinsky9'
            keyAlias 'keydirza'
            keyPassword 'stravinsky9'
        }
    }
    compileSdk 31

    defaultConfig {
        applicationId "com.dirzaaulia.gamewish"
        minSdk 24
        targetSdk 30
        versionCode 1
        versionName "1.0"
        vectorDrawables.useSupportLibrary true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
        useIR = true

        // Enable Coroutines and Flow APIs
        freeCompilerArgs += "-Xopt-in=kotlinx.coroutines.ExperimentalCoroutinesApi"
        freeCompilerArgs += "-Xopt-in=kotlinx.coroutines.FlowPreview"
        freeCompilerArgs += "-Xopt-in=com.google.accompanist.pager.ExperimentalPagerApi"
        freeCompilerArgs += "-Xopt-in=androidx.compose.foundation.ExperimentalFoundationApi"
        freeCompilerArgs += "-Xopt-in=com.google.accompanist.insets.ExperimentalAnimatedInsets"
        freeCompilerArgs += "-Xopt-in=androidx.compose.material.ExperimentalMaterialApi"
        freeCompilerArgs += "-Xopt-in=androidx.compose.animation.ExperimentalAnimationApi"
    }

    buildFeatures {
        compose true
        // Disable unused AGP features
        buildConfig false
        aidl false
        renderScript false
        resValues false
        shaders false
    }

    composeOptions {
        kotlinCompilerExtensionVersion Libs.AndroidX.Compose.version
    }

    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {

    implementation Libs.Accompanist.animation
    implementation Libs.Accompanist.insets
    implementation Libs.Accompanist.swipeRefresh
    implementation Libs.Accompanist.systemUiController
    implementation Libs.Accompanist.pager
    implementation Libs.Accompanist.flowLayout

    implementation Libs.AndroidX.coreKtx
    implementation Libs.AndroidX.splashScreen
    implementation Libs.AndroidX.navigation
    implementation Libs.AndroidX.materialDesign
    implementation Libs.AndroidX.Activity.activityCompose
    implementation Libs.AndroidX.ConstraintLayout.constraintLayoutCompose

    implementation Libs.AndroidX.Compose.runtime
    implementation Libs.AndroidX.Compose.foundation
    implementation Libs.AndroidX.Compose.livedata
    implementation Libs.AndroidX.Compose.layout
    implementation Libs.AndroidX.Compose.ui
    implementation Libs.AndroidX.Compose.uiUtil
    implementation Libs.AndroidX.Compose.material
    implementation Libs.AndroidX.Compose.animation
    implementation Libs.AndroidX.Compose.iconsExtended
    implementation Libs.AndroidX.Compose.tooling

    implementation Libs.AndroidX.Lifecycle.livedata
    implementation Libs.AndroidX.Lifecycle.viewModel_savedState
    implementation Libs.AndroidX.Lifecycle.viewModel

    implementation Libs.Coil.coilCompose

    implementation Libs.Coroutines.android
    implementation Libs.Coroutines.core
    implementation Libs.Coroutines.playServices

    implementation platform(Libs.Firebase.bom)
    implementation Libs.Firebase.database
    implementation Libs.Firebase.storage
    implementation Libs.Firebase.auth
    implementation Libs.Firebase.firestore
    implementation Libs.Firebase.UI.database
    implementation Libs.Firebase.UI.auth

    implementation Libs.Hilt.android

    implementation Libs.Hilt.Compose.navigation

    implementation Libs.Kotlin.stdlib

    implementation Libs.Gms.playServiceAuth

    implementation Libs.Gson.core

    implementation Libs.Other.currencyConverter
    implementation Libs.Other.imageSlideShow
    implementation Libs.Other.photoView
    implementation Libs.Other.timber

    implementation Libs.Paging.runtime
    implementation Libs.Paging.Compose.compose

    implementation Libs.Proto.main
    implementation Libs.Proto.core
    implementation Libs.Proto.Protobuf.javalite

    implementation Libs.Room.ktx
    implementation Libs.Room.runtime

    implementation Libs.SquareUp.OkHttp.logging
    implementation Libs.SquareUp.Moshi.kotlin
    implementation Libs.SquareUp.Retrofit.core

    kapt Libs.Hilt.compiler
    kapt Libs.Room.compiler

    androidTestImplementation Libs.AndroidX.Activity.activityCompose

    androidTestImplementation Libs.JUnit.junit
    androidTestImplementation Libs.AndroidX.Test.core
    androidTestImplementation Libs.AndroidX.Test.espressoCore
    androidTestImplementation Libs.AndroidX.Test.rules
    androidTestImplementation Libs.AndroidX.Test.Ext.junit
    androidTestImplementation Libs.AndroidX.Compose.uiTest

    debugImplementation Libs.Chucker.debug
    debugImplementation Libs.AndroidX.Compose.uiTestManifest

    releaseImplementation Libs.Chucker.release
}

protobuf {
    protoc {
        artifact = Libs.Proto.Protobuf.artifact
    }

    // Generates the java Protobuf-lite code for the Protobufs in this project. See
    // https://github.com/google/protobuf-gradle-plugin#customizing-protobuf-compilation
    // for more information.
    generateProtoTasks {
        all().each { task ->
            task.builtins {
                java {
                    option 'lite'
                }
            }
        }
    }
}